{"version":3,"sources":["components/todoform.js","components/todo.js","index.js"],"names":["TodoForm","state","item","change","event","setState","target","name","value","submit","preventDefault","props","onSubmit","id","shortid","generate","complete","this","onChange","placeholder","className","onClick","Component","delete","style","textDecoration","todo","App","todos","addTodo","newTodos","map","filter","key","length","ReactDOM","render","document","querySelector"],"mappings":"4QAGqBA,E,4MAEjBC,MAAQ,CACJC,KAAM,I,EAGVC,OAAS,SAACC,GACN,EAAKC,SAAL,eACKD,EAAME,OAAOC,KAAOH,EAAME,OAAOE,S,EAI1CC,OAAS,SAACL,GACNA,EAAMM,iBACN,EAAKC,MAAMC,SAAS,CAChBC,GAAIC,IAAQC,WACZb,KAAM,EAAKD,MAAMC,KACjBc,UAAU,IAEd,EAAKX,SAAS,CACVH,KAAM,M,uDAKV,OACI,6BACI,0BAAMU,SAAUK,KAAKR,QACjB,2BAAOF,KAAK,OAAOC,MAAOS,KAAKhB,MAAMC,KAAMgB,SAAUD,KAAKd,OAAQgB,YAAY,cAC9E,4BAAQC,UAAU,MAAMC,QAASJ,KAAKR,QAAtC,kB,GA7BkBa,aCAvB,WAAAX,GAAK,OAChB,4BACI,0BAAMS,UAAU,MAAMC,QAASV,EAAMY,QAAQ,uBAAGH,UAAU,kBAC1D,0BAAMI,MAAO,CAAEC,eAAgBd,EAAMe,KAAKV,SAAW,eAAiB,IAC1EK,QAASV,EAAMK,UAAWL,EAAMe,KAAKxB,QCCnCyB,G,kNACF1B,MAAQ,CACJ2B,MAAO,I,EAGXC,QAAU,SAACH,GACP,IAAMI,EAAQ,CAAIJ,GAAJ,mBAAa,EAAKzB,MAAM2B,QACtC,EAAKvB,SAAS,CACVuB,MAAOE,K,EAIfd,SAAW,SAACH,GACR,EAAKR,SAAS,CACVuB,MAAO,EAAK3B,MAAM2B,MAAMG,KAAI,SAAAL,GACxB,OAAIA,EAAKb,KAAOA,EACL,eACAa,EADP,CAEIV,UAAWU,EAAKV,WAGbU,Q,EAMvBH,OAAS,SAACV,GACN,EAAKR,SAAS,CACVuB,MAAO,EAAK3B,MAAM2B,MAAMI,QAAO,SAAAN,GAAI,OAAIA,EAAKb,KAAOA,Q,uDAIjD,IAAD,OACL,OACI,6BACI,6BACI,mDAEJ,kBAAC,EAAD,CAAUD,SAAUK,KAAKY,UACxBZ,KAAKhB,MAAM2B,MAAMG,KAAI,SAAAL,GAAI,OACtB,kBAAC,EAAD,CAAMO,IAAKP,EAAKb,GAAIU,OAAQ,kBAAM,EAAKA,OAAOG,EAAKb,KAAKG,SAAU,kBAAM,EAAKA,SAASU,EAAKb,KAAKa,KAAMA,OAE1G,yBAAKN,UAAU,QAAf,eACiBH,KAAKhB,MAAM2B,MAAMI,QAAO,SAAAN,GAAI,OAAKA,EAAKV,YAAUkB,a,GA5C/DZ,cAoDlBa,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,cAAc,iB","file":"static/js/main.ec45bee4.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport shortid from 'shortid';\n\nexport default class TodoForm extends Component {\n\n    state = {\n        item: \"\"\n    }\n\n    change = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n    };\n\n    submit = (event) => {\n        event.preventDefault();\n        this.props.onSubmit({\n            id: shortid.generate(),\n            item: this.state.item,\n            complete: false\n        });\n        this.setState({\n            item: \"\"\n        })\n    }\n\n    render(){\n        return (\n            <div>\n                <form onSubmit={this.submit}>\n                    <input name=\"item\" value={this.state.item} onChange={this.change} placeholder=\"Todo item\" />\n                    <button className=\"add\" onClick={this.submit}>Add Todo</button>\n                </form>\n            </div>\n        )\n    }\n}","import React from 'react';\n\n\nexport default props =>\n    <li >\n        <span className=\"spn\" onClick={props.delete}><i className=\"fas fa-trash\"></i></span>\n        <span style={{ textDecoration: props.todo.complete ? \"line-through\" : \"\" }}\n    onClick={props.complete}>{props.todo.item}</span>\n    </li>\n\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\n// import TodoList from './todolist';\nimport TodoForm from './components/todoform';\nimport Todo from './components/todo';\nimport \"./style.css\";\n\n\nclass App extends Component {\n    state = {\n        todos: []\n    }\n\n    addTodo = (todo) => {\n        const newTodos = [todo, ...this.state.todos];\n        this.setState({\n            todos: newTodos\n        })\n    }\n\n    complete = (id) => {\n        this.setState({\n            todos: this.state.todos.map(todo => {\n                if (todo.id === id) {\n                    return {\n                        ...todo,\n                        complete: !todo.complete\n                    }\n                } else {\n                    return todo;\n                }\n            })\n        })\n    }\n\n    delete = (id) => {\n        this.setState({\n            todos: this.state.todos.filter(todo => todo.id !== id)\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <div>\n                    <h1>Grocery To-Do List</h1>\n                </div>\n                <TodoForm onSubmit={this.addTodo} />\n                {this.state.todos.map(todo => (\n                    <Todo key={todo.id} delete={() => this.delete(todo.id)} complete={() => this.complete(todo.id)} todo={todo} />\n                ))}\n                <div className=\"foot\">\n                    Todos Left: {this.state.todos.filter(todo => !todo.complete).length}\n                </div>\n            </div>\n        )\n    }\n}\n\n\nReactDOM.render(<App />, document.querySelector('.container'));"],"sourceRoot":""}